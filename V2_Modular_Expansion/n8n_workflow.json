{
  "name": "V2 Modular Expansion",
  "nodes": [
    {
      "parameters": {
        "functionCode": "// Intake Agent logic placeholder\nreturn items;"
      },
      "name": "Intake Agent",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        200,
        300
      ],
      "notes": "This node simulates the behavior of the Intake Agent. Replace with actual logic or HTTP/API node as needed."
    },
    {
      "parameters": {
        "functionCode": "// Preprocessing Agent logic placeholder\nreturn items;"
      },
      "name": "Preprocessing Agent",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        450,
        300
      ],
      "notes": "This node simulates the behavior of the Preprocessing Agent. Replace with actual logic or HTTP/API node as needed."
    },
    {
      "parameters": {
        "functionCode": "// Metadata Extraction Agent logic placeholder\nreturn items;"
      },
      "name": "Metadata Extraction Agent",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        700,
        300
      ],
      "notes": "This node simulates the behavior of the Metadata Extraction Agent. Replace with actual logic or HTTP/API node as needed."
    },
    {
      "parameters": {
        "functionCode": "// Verifier Agent logic placeholder\nreturn items;"
      },
      "name": "Verifier Agent",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        950,
        300
      ],
      "notes": "This node simulates the behavior of the Verifier Agent. Replace with actual logic or HTTP/API node as needed."
    },
    {
      "parameters": {
        "functionCode": "// Responder Agent logic placeholder\nreturn items;"
      },
      "name": "Responder Agent",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1200,
        300
      ],
      "notes": "This node simulates the behavior of the Responder Agent. Replace with actual logic or HTTP/API node as needed."
    }
  ],
  "connections": {
    "Intake Agent": [
      {
        "node": "Preprocessing Agent",
        "type": "main",
        "index": 0
      }
    ],
    "Preprocessing Agent": [
      {
        "node": "Metadata Extraction Agent",
        "type": "main",
        "index": 0
      }
    ],
    "Metadata Extraction Agent": [
      {
        "node": "Verifier Agent",
        "type": "main",
        "index": 0
      }
    ],
    "Verifier Agent": [
      {
        "node": "Responder Agent",
        "type": "main",
        "index": 0
      }
    ]
  }
}