# MULTIPLE PRODUCT HANDLING SPECIFICATION (V1)

## Overview

This specification defines a consistent approach for handling documents that contain multiple products, enhancing the V1 Linear Flow pipeline to extract and process multiple products from a single source document with equal treatment for all products.

## Core Principles

1. **Equal Product Treatment**: All products in a document are treated equally with full extraction
2. **Independent Processing**: Each product is processed and validated independently
3. **Array-First Design**: Products are always represented as arrays, even for single products
4. **Complete Extraction**: Extract full metadata for all distinct products found
5. **DRY Implementation**: Reuse existing extraction/verification logic across all products

## Implementation Components

### 1. Product Detection

The LLM Extraction stage detects multiple products by identifying:
- Multiple distinct product names/codes
- Sections with different materials that aren't just variations
- Tabular data with multiple product entries
- Visual separation between different products

### 2. Product Identification Rules

Products are considered distinct when they have:
- Different product names
- Different product codes
- Different material compositions
- Separate specification sections in the document

Products are NOT distinct when they only differ in:
- Color/finish options
- Size/dimension options
- Minor variations mentioned as options

### 3. Extraction Process

1. **Document Analysis**:
   - Analyze entire document to identify all distinct products
   - Apply product identification rules consistently

2. **Complete Extraction**:
   - Extract full metadata for every distinct product found
   - Each product gets complete schema fields with locations and confidence scores
   - No arbitrary limits on number of products extracted

3. **Array Output**:
   - Always return products as an array
   - Single product documents return array with one element
   - Multiple product documents return array with all products

### 4. Data Processing

The LLM Data Processor:
- Receives array of products from extraction
- Processes each product independently
- Applies confidence policy to each product separately
- Returns arrays of successful and failed products

### 5. Verification Process

The Multimodal Verifier:
- Verifies each product in the array independently
- Applies same verification standards to all products
- Returns verification results for each product
- Supports partial success (some products verified, others not)

## Schema Structure

Products are always represented as arrays following MULTIPLE_PRODUCT_SCHEMA.txt:

```json
{
  "document_id": "doc-123456",
  "source_file_name": "example_catalog.pdf",
  "products": [
    {
      // Complete product schema with all fields
      "name": "Product 1",
      "brand": "Brand Name",
      "summary": "Description",
      // ... all other fields
    },
    {
      // Another complete product
      "name": "Product 2",
      "brand": "Brand Name",
      "summary": "Description",
      // ... all other fields
    }
  ]
}
```

## State Transitions

State transitions remain unchanged but apply to the document level:
- `EXTRACTED`: All products extracted successfully
- `PROCESSED`: Products processed with success/failure determination
- `VERIFIED`: Verification completed for all products
- `COMPLETED`: At least one product successfully processed

## Processing Policy

1. **Extraction Success**: Document succeeds if any products are extracted
2. **Processing Success**: Document succeeds if at least one product passes confidence thresholds
3. **Verification Success**: Document succeeds if at least one product is verified
4. **Partial Success**: Supported throughout the pipeline

## Benefits

1. **Complete Information**: Captures all products in multi-product documents
2. **Consistent Processing**: Same logic applies to all products
3. **Flexible Output**: Supports variable number of products
4. **Backward Compatible**: Single products work with array structure

## Implementation Notes

1. Products are always in array format for consistency
2. Each product is processed independently with its own confidence scores
3. Existing MVS requirements apply to each product individually
4. No hierarchical relationships between products - all are equal
5. No limits on number of products that can be extracted
