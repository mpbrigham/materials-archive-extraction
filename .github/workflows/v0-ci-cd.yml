name: Deploy V0 Initial Flow

on:
  push:
    branches: [v0_initial_flow]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Validate materials schema
        run: |
          cd v0_initial_flow
          python3 -m json.tool schema/materials_schema.json > /dev/null
          echo "âœ… Materials schema is valid"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ubuntu
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            cd /opt/materials-archive-extraction/v0_initial_flow
            git checkout v0_initial_flow
            git pull origin v0_initial_flow
            
            # Ensure data directory exists with correct permissions for n8n
            mkdir -p data
            chown -R 1000:1000 data/ 2>/dev/null || echo "Cannot change ownership, continuing..."
            
            # Deploy with environment variables
            EMAIL_USER="${{ secrets.EMAIL_USER }}" \
            EMAIL_PASS="${{ secrets.EMAIL_PASS }}" \
            LLM_API_KEY="${{ secrets.LLM_API_KEY }}" \
            N8N_ENCRYPTION_KEY="${{ secrets.N8N_ENCRYPTION_KEY }}" \
            docker compose up -d --build
            
            # Wait for n8n to be ready
            echo "Waiting for n8n to start..."
            timeout=300
            while [ $timeout -gt 0 ]; do
              if curl -s http://localhost:5678/healthz > /dev/null 2>&1; then
                echo "n8n is ready!"
                break
              fi
              sleep 5
              timeout=$((timeout - 5))
            done
            
            if [ $timeout -le 0 ]; then
              echo "n8n failed to start within 5 minutes"
              exit 1
            fi
            
            # Import credentials and workflow using export/import pattern
            echo "Importing credentials..."
            docker exec v0_initial_flow-n8n-1 n8n import:credentials --input=/home/node/import/credentials.json
            
            echo "Importing workflow..."
            docker exec v0_initial_flow-n8n-1 n8n import:workflow --input=/home/node/import/workflows.json
            
            echo "Activating workflow..."
            docker exec v0_initial_flow-n8n-1 n8n update:workflow --id=SjsG0ctMg0DMZCMn --active=true
            
            echo "Deployment completed successfully!"
