services:
  activepieces:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: materials-ap
    restart: unless-stopped
    ports:
      - "127.0.0.1:5679:8080"  # Changed from 5678 to avoid conflict with n8n
    environment:
      # Core ActivePieces configuration
      - AP_ENGINE_EXECUTABLE_PATH=dist/packages/engine/main.js
      - AP_FRONTEND_URL=http://127.0.0.1:5679
      - AP_WEBHOOK_URL=http://127.0.0.1:5679/api/v1/webhooks
      - AP_SANDBOX_RUN_TIME_SECONDS=600
      - AP_TELEMETRY_ENABLED=false
      
      # Database configuration
      - AP_POSTGRES_DATABASE=activepieces
      - AP_POSTGRES_HOST=postgres
      - AP_POSTGRES_PORT=5432
      - AP_POSTGRES_USERNAME=activepieces
      - AP_POSTGRES_PASSWORD=activepieces
      
      # Redis configuration
      - AP_REDIS_HOST=redis
      - AP_REDIS_PORT=6379
      
      # Security settings
      - AP_ENCRYPTION_KEY=activepieces-encryption-key-min-32-chars
      - AP_JWT_SECRET=activepieces-jwt-secret-min-32-chars
      
    volumes:
      # Data persistence
      - ./data:/data
      
      # Mount prompt and template directories
      - ./prompts:/data/prompts:ro
      - ./email_templates:/data/email_templates:ro
      - ./schema:/data/schema:ro
      
      # Mount workflow definition
      - ./activepieces.json:/data/activepieces.json:ro
      
    env_file:
      - .env
    
    depends_on:
      - postgres
      - redis
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  postgres:
    image: postgres:14
    container_name: materials-ap-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=activepieces
      - POSTGRES_USER=activepieces
      - POSTGRES_PASSWORD=activepieces
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: materials-ap-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
